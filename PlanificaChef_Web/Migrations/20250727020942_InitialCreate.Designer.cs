// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanificaChef_Web.Data;

#nullable disable

namespace PlanificaChef_Web.Migrations
{
    [DbContext(typeof(PlanificaChefContext))]
    [Migration("20250727020942_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanificaChef_Web.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 12.50m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9263),
                            Name = "Huevos",
                            Unit = "pieza"
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 25.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9270),
                            Name = "Leche",
                            Unit = "litro"
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 30.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9272),
                            Name = "Pan",
                            Unit = "paquete"
                        },
                        new
                        {
                            Id = 4,
                            BasePrice = 80.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9274),
                            Name = "Pollo",
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 5,
                            BasePrice = 35.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9277),
                            Name = "Arroz",
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 6,
                            BasePrice = 15.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9279),
                            Name = "Yogurt",
                            Unit = "pieza"
                        },
                        new
                        {
                            Id = 7,
                            BasePrice = 45.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9282),
                            Name = "Granola",
                            Unit = "paquete"
                        },
                        new
                        {
                            Id = 8,
                            BasePrice = 20.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9283),
                            Name = "Avena",
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 9,
                            BasePrice = 50.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9285),
                            Name = "Frutas",
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 10,
                            BasePrice = 30.00m,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9287),
                            Name = "Verduras",
                            Unit = "kg"
                        });
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.MealPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BreakfastRecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DayTotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DinnerRecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("LunchRecipeId")
                        .HasColumnType("int");

                    b.Property<int?>("SnackRecipeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BreakfastRecipeId");

                    b.HasIndex("DinnerRecipeId");

                    b.HasIndex("LunchRecipeId");

                    b.HasIndex("SnackRecipeId");

                    b.ToTable("MealPlans");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MealType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PreparationTimeMinutes")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9935),
                            MealType = 0,
                            Name = "Huevos Revueltos",
                            PreparationTimeMinutes = 15,
                            TotalPrice = 45.50m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9944),
                            MealType = 1,
                            Name = "Pollo al Curry",
                            PreparationTimeMinutes = 45,
                            TotalPrice = 85.00m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9946),
                            MealType = 2,
                            Name = "Yogurt con Granola",
                            PreparationTimeMinutes = 5,
                            TotalPrice = 22.50m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9949),
                            MealType = 3,
                            Name = "Sopa de Verduras",
                            PreparationTimeMinutes = 30,
                            TotalPrice = 33.00m
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 27, 2, 9, 41, 822, DateTimeKind.Utc).AddTicks(9951),
                            MealType = 0,
                            Name = "Avena con Frutas",
                            PreparationTimeMinutes = 10,
                            TotalPrice = 28.75m
                        });
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("TotalEstimated")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.ShoppingListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("EstimatedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<bool>("IsPurchased")
                        .HasColumnType("bit");

                    b.Property<string>("Quantity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ShoppingListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ShoppingListId");

                    b.ToTable("ShoppingListItems");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.MealPlan", b =>
                {
                    b.HasOne("PlanificaChef_Web.Models.Recipe", "BreakfastRecipe")
                        .WithMany()
                        .HasForeignKey("BreakfastRecipeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlanificaChef_Web.Models.Recipe", "DinnerRecipe")
                        .WithMany()
                        .HasForeignKey("DinnerRecipeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlanificaChef_Web.Models.Recipe", "LunchRecipe")
                        .WithMany()
                        .HasForeignKey("LunchRecipeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("PlanificaChef_Web.Models.Recipe", "SnackRecipe")
                        .WithMany()
                        .HasForeignKey("SnackRecipeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BreakfastRecipe");

                    b.Navigation("DinnerRecipe");

                    b.Navigation("LunchRecipe");

                    b.Navigation("SnackRecipe");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.RecipeIngredient", b =>
                {
                    b.HasOne("PlanificaChef_Web.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanificaChef_Web.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.ShoppingListItem", b =>
                {
                    b.HasOne("PlanificaChef_Web.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlanificaChef_Web.Models.ShoppingList", "ShoppingList")
                        .WithMany("Items")
                        .HasForeignKey("ShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("ShoppingList");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("PlanificaChef_Web.Models.ShoppingList", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
